buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = "https://maven.parchmentmc.org/" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath group: 'org.parchmentmc', name: 'librarian', version: '1.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

group = 'tt432'
version = '1.18.2-1-1'

java {
    archivesBaseName = 'tinkersorigins'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: 'parchment', version: "2022.07.17-1.18.2"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'tinkersorigins'

            mods {
                tinkersorigins {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'tinkersorigins'

            mods {
                tinkersorigins {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'tinkersorigins'

            mods {
                tinkersorigins {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'tinkersorigins', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                tinkersorigins {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "tinkersorigins.refmap.json"

    config "tinkersorigins.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    maven {
        url = "https://maven.theillusivec4.top"
    }

    maven {
        name 'DVS1 Maven FS'
        url 'https://dvs1.progwml6.com/files/maven'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.68'

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation fg.deobf("curse.maven:origins-474438:3847281")
    implementation fg.deobf("top.theillusivec4.caelus:caelus-forge:1.18.1-3.0.0.2")

    implementation fg.deobf("slimeknights.mantle:Mantle:1.18.2-1.9.28")
    implementation fg.deobf("slimeknights.tconstruct:TConstruct:1.18.2-3.5.1.35")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "tinkersorigins",
                "Specification-Vendor"    : "DustW",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "DustW",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
